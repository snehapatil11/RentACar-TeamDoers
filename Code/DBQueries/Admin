Commands:
 1)  pip install awscli\n
 2)  aws configure
 3)  aws dynamodb list-tables $LOCAL


Queries:

1) Table: Vehicle


a) Insert: To add a new vehicle

aws dynamodb put-item \
    --table-name Vehicle \
    --item '{
      "vehicleId": {"S": "3"},
      "condition": {"S": "Good"},
      "currentMileage": {"N": "81"},
      "hourlyPrice": {"N": "100"},
      "lastServiceDate": {"S": "4/12/2020"},
      "make": {"S": "Honda Accord"},
      "registrationTag": {"S": "HA_101"},
      "rentalLocationAddress": {"S": "San Francisco"},
      "rentalLocationName": {"S": "Auto Mall"},
      "rentalLocationVehicleCapacity": {"N": "250"},
      "vehicleType": {"S": "large"},
      "year": {"N": "2020"}

    }' \
    $LOCAL


b) Fetch: All records from Vehicle table

aws dynamodb scan --table-name Vehicle
aws dynamodb scan --table-name Vehicle --region us-east-2

OR

aws dynamodb query --table-name Vehicle --region us-east-2 --key-conditions '{
  "vehicleId":{
    "AttributeValueList": [
      {
        "S":"3"
      }
    ],
    "ComparisonOperator":"EQ"
  }

}'

OR

aws dynamodb query --table-name Vehicle --region us-east-2 --key-conditions file://query.json

c) Update: 

aws dynamodb update-item \
    --table-name Vehicle \
    --key file://key.json \
    --update-expression "SET hourlyPrice = :h, model = :model" \
    --expression-attribute-values file://expression-attribute-values.json \
    --return-values ALL_NEW

key.json
{
    "vehicleId": {"S": "3"},
}
        
expression-attribute-values.json
{
    ":h": {"N":"60"},
    ":model": {"S":"Purple Car"}
}


