{"version":3,"sources":["images/rentcar.jpg","components/footer.js","components/header.js","components/welcomePage.js","components/login.js","components/userHeader.js","services/vehicleServices.js","components/reservationForm.js","components/user.js","components/test.js","config/config.js","components/joinus.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","style","position","left","bottom","backgroundColor","color","textAlign","width","paddingTop","height","fontSize","Header","Layout","Headers","props","clickedJoinUs","setState","redirectPage","to","pathname","clickedSignin","clickedWelcome","clickedHome","state","this","theme","mode","defaultSelectedKeys","selectedKey","lineHeight","Item","key","onClick","Component","Content","WelcomePage","redirect","className","background","span","src","require","maxWidth","minHeight","maxHeight","Option","Select","Login","handleSubmit","values","console","log","failedSubmit","error","showError","labelCol","wrapperCol","name","initialValues","remember","onFinish","onFinishFailed","label","rules","required","message","Password","value","offset","type","htmlType","UserHeader","clickedProfile","clickedLogout","fontWeight","float","uuidv4","vehicleServices","getVehiclesData","email","fetch","apiConfig","then","response","json","getVehicleTransactions","vehicleId","rentedDate","storeVehicleTransaction","userId","isReserved","isReturned","rentedDateTime","rentedLength","rentEndDateTime","returnDateTime","url","method","body","JSON","stringify","headers","res","ReservationForm","visible","onCancel","onCreate","fields","Form","useForm","form","title","okText","resetFields","onOk","validateFields","catch","info","layout","rentalLength","marginBottom","showTime","format","min","max","defaultValue","User","searchText","searchedColumn","filterRentalLocation","reservationFormVisible","showModal","handleOk","e","data","vehiclesData","filter","item","vehicleType","filterVehicleType","handleCancel","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","onChange","target","onPressEnter","handleSearch","display","icon","SearchOutlined","size","marginRight","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","preventDefault","rentalLocationName","columns","zIndex","reserve","pagination","pageSizeOptions","showSizeChanger","dataSource","vehicle","rentDateTime","moment","rentalDate","rentLength","parseInt","add","vehicleTransactionData","data1","isSameOrBefore","isSameOrAfter","length","Swal","fire","React","App1","valuesExport","price","MonthPicker","DatePicker","validNumbers","formItemLayout","xs","sm","tailFormItemLayout","RegistrationForm","formRef","createRef","onStateChange","stateValue","insertUser","username","emailid","password","licenseState","licenseNum","address","CCNumber","creditCard","ownerName","cvv","expiryMonth","monthPicker","expiryYear","memStartDate","memEndDate","months","pricePaid","isMember","axios","post","status","err","checkLicenseNum","rule","validate","Promise","resolve","reject","submitPayment","showSubmit","handleInputFocus","focus","handleInputChange","handleInputChangeNumber","number","checkCreditCard","newValue","checkName","checkValidity","valueO","expiry","checkCVV","test","cvc","disabledDate","current","valueOf","Date","now","onMembershipChange","showIt","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","allowClear","TextArea","onFocus","disabled","Main","exact","path","component","LoginForm","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c988939b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rentcar.1ca21d94.jpg\";","import React from 'react';\n\n\nconst Footer = () => {\n\n\nreturn (<footer style={{ position: 'fixed', left: '0', bottom: '0', backgroundColor: 'red',\n  color: 'black', textAlign: 'center', width: '100%', paddingTop:'1%', height:'6%', fontSize:'large' }}>Developed by: Team DOers</footer>);\n\n}\n\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Redirect } from 'react-router';\n\nconst { Header } = Layout;\n\nclass Headers extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          redirectPage:''\n        };\n      }\n    \n\n\n clickedJoinUs = () => {\n    this.setState({\n      redirectPage: <Redirect to = {{pathname:'/joinus/'}} />\n    }) \n  }\n\n   clickedSignin = () => {\n    this.setState({\n      redirectPage: <Redirect to = {{pathname:'/signin/'}} />\n    }) \n  }\n\n\n  clickedWelcome = () => {\n    this.setState({\n      redirectPage: <Redirect to = {{pathname:'/welcome/'}} />\n      }) \n  }\n\n clickedHome = () => {\n  this.setState({\n    redirectPage: <Redirect to = {{pathname:'/user/'}} />\n  }) \n}\n\n\nrender(){\nreturn ( \n    <div>\n              {this.state.redirectPage}\n\n<Header>\n    <div />\n    <Menu\n      theme=\"dark\"\n      mode=\"horizontal\"\n      defaultSelectedKeys={this.props.selectedKey}\n      style={{ lineHeight: '64px'}}\n    >\n      <Menu.Item key=\"1\" onClick={this.clickedWelcome}>Welcome</Menu.Item>\n      <Menu.Item key=\"2\" onClick={this.clickedJoinUs}>Join Us</Menu.Item>\n      <Menu.Item key=\"3\" onClick={this.clickedSignin}>Sign in</Menu.Item>\n      <Menu.Item key=\"4\" onClick={this.clickedHome}>Home</Menu.Item>\n    </Menu>\n  </Header>\n  </div>\n  )\n}\n\n\n\n}\n\nexport default Headers;","import React, { Component } from 'react';\nimport Footer from './footer';\nimport Headers from './header';\nimport { Layout, Row, Col } from 'antd';\nimport \"antd/dist/antd.css\";\n\n\nconst { Content } = Layout;\n\n\nclass WelcomePage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            redirect: ''\n        };\n    }\n\n    componentDidMount() {\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                {this.state.redirect}\n                <div>\n                    <Row >\n                        <Layout className=\"layout\">\n                            <Headers selectedKey={['1']} />\n                            <Content>\n                                <div style={{ background: '#fff' }}>\n                                    <br></br>\n                                    <Row>\n                                        <Col span={14}>\n                                            <img src={require('../images/rentcar.jpg')} style={{ maxWidth: '100%', minHeight: '100%', maxHeight: '50%' }} />\n                                        </Col>\n\n                                        <Col span={2}></Col>\n                                        <Col span={6}>\n                                            <h1>Welcome to Easy Car Rentals!!</h1>\n\n                                            <h2>We also provide services to people under age of 25</h2>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n\n                                    </Row>\n                                </div>\n\n                            </Content>\n                            <Footer />\n                        </Layout>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WelcomePage;\n","import React, { Component } from 'react';\nimport { Form, Input, Button, Alert, Select } from 'antd';\nimport \"antd/dist/antd.css\";\nimport Headers from './header';\nimport Footer from './footer';\n\nconst { Option } = Select;\n\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n            redirectPage: '',\n            showError: false,\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleSubmit = values => {\n        console.log(values)\n    };\n\n    failedSubmit = (error) => {\n        console.log(error)\n    }\n\n    render() {\n        const frontFormLayout = {\n            labelCol: {\n                span: 8,\n            },\n            wrapperCol: {\n                span: 8,\n            },\n        };\n        const tailFormLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 8,\n            },\n        };\n\n\n        return (\n            <div>\n                {this.state.redirectPage}\n                <div>\n                    <Headers selectedKey={['3']} />\n                </div>\n                <div>\n\n                    <Form\n                        {...frontFormLayout}\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={this.handleSubmit}\n                        onFinishFailed={this.failedSubmit}\n                        style={{ paddingTop: '2%' }}\n                    >\n                        <Form.Item\n                            label=\"Username\"\n                            name=\"username\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"User Type\"\n                            name=\"userType\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please select user type!',\n                                },\n                            ]}\n                        >\n                            <Select\n                            >\n                                <Option value=\"user\">User</Option>\n                                <Option value=\"admin\">Admin</Option>\n                                <Option value=\"other\">other</Option>\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item {...tailFormLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n                {this.state.showError && <div>\n                    <Alert message=\"Invalid credentials\" type=\"error\" />\n\n                </div>\n                }\n                <div>\n                    <Footer />\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Menu} from 'antd';\nimport { Redirect } from 'react-router';\n\n\nclass UserHeader extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          redirectPage:''\n        };\n      }\n    \n   clickedProfile = () => {\n    this.setState({\n      redirectPage: <Redirect to = {{pathname:'/user/profile'}} />\n    }) \n  }\n  clickedHome = () => {\n    this.setState({\n      redirectPage: <Redirect to = {{pathname:'/user/'}} />\n    }) \n  }\n\n  clickedLogout = () => {\n    this.setState({\n      redirectPage: <Redirect to = {{pathname:'/welcome/'}} />\n    }) \n  }\n\n\nrender(){\nreturn ( \n\n    <div>\n        {this.state.redirectPage}\n        <div style={{background:'grey'}}>\n  \n    <Menu\n    theme=\"dark\"\n    mode=\"horizontal\"\n      defaultSelectedKeys={this.props.selectedKey}\n      style={{  fontWeight:'bold' }}\n    >\n\n      <Menu.Item key=\"3\" onClick={this.clickedLogout} style={{color:'white', float:'right'}}>Logout</Menu.Item>\n      <Menu.Item key=\"2\" onClick={this.clickedProfile} style={{color:'white', float:'right'}}>Profile</Menu.Item>\n      <Menu.Item key=\"1\" onClick={this.clickedHome} style={{color:'white', float:'right'}}>Home</Menu.Item>\n     \n    </Menu>\n  \n  </div>\n  \n  </div>\n  \n  )\n}\n\n\n\n}\n\nexport default UserHeader;","const uuidv4 = require('uuid/v4');\n\nexport const vehicleServices  = {\n    getVehiclesData,\n    getVehicleTransactions,\n    storeVehicleTransaction\n}\n\nexport const apiConfig = {\n    endpointURL: \"http://localhost:4000/api\"\n}\n\nfunction getVehiclesData(email) \n{    \n    return fetch(`${apiConfig.endpointURL}/allVehicles/`)\n    .then(response => {\n        return response.json()\n    })    \n}\n\nfunction getVehicleTransactions(vehicleId, rentedDate) \n{\n    return fetch(`${apiConfig.endpointURL}/vehicleTransactions/`+ vehicleId)\n    .then(response => {\n        return response.json()\n    })    \n}\n\nfunction storeVehicleTransaction(vehicleId, userId, isReserved, isReturned,rentedDateTime,rentedLength, rentEndDateTime, returnDateTime){\n\n    const url=`${apiConfig.endpointURL}/postVehicleTransaction`;\n    return fetch(url, {\n            method: 'Post',\n            body: JSON.stringify({\n                \"vehicleTransactionId\": uuidv4(),\n                \"vehicleId\": vehicleId,\n                \"userId\":userId,\n                \"isReserved\":isReserved,\n                \"isReturned\":isReturned,\n                \"rentedDateTime\": rentedDateTime,\n                \"rentedLength\":rentedLength,\n                \"rentEndDateTime\":rentEndDateTime,\n                \"returnDateTime\":returnDateTime\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n              }\n        }).then(res => {return res})\n}","import React ,{useState} from \"react\";\nimport { Modal, Form, Input, DatePicker,InputNumber } from \"antd\";\n\n\nconst ReservationForm = ({ visible, onCancel, onCreate, fields,}) => {\n    const [form] = Form.useForm();\n    \n  return (\n    <Modal\n      visible={visible}\n      title=\"Vehicle Reservation\"\n      okText=\"Submit\"\n      onCancel={() => {\n        form.resetFields();\n        onCancel();\n      }\n      }\n      onOk={() => {\n        form\n          .validateFields()\n          .then(values => {\n            form.resetFields();\n            onCreate(values);\n          })\n          .catch(info => {\n            console.log('Validate Failed:', info);\n          });\n      }}\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"form_in_modal\"\n        fields={fields}\n        initialValues={{\n          rentalLength:1\n        }}\n      >\n        <Form.Item name=\"vehicleType\" label=\"Vehicle Type\" style={{ marginBottom: \"0px\" }} >\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"rentalLocation\" label=\"Rental Location\" style={{ marginBottom: \"0px\" }}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"rentalDate\" label=\"Pickup Date\" style={{ marginBottom: \"0px\" }}>\n          <DatePicker showTime={{ format: 'HH:mm' }} format=\"YYYY-MM-DD HH:mm\"/>\n        </Form.Item>\n        <Form.Item name=\"rentalLength\" label=\"Length of Rental By Hour (Max 72hrs)\" className=\"collection-create-form_last-form-item\">\n          <InputNumber min={1} max={72} defaultValue={1}/>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\n//const ReservationForm = Form.create({ name: \"modal_form\" })(ReservationFormComponent);\n\nexport default ReservationForm;\n","import React , { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Modal } from 'antd';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport UserHeader from './userHeader';\nimport Footer from './footer';\nimport { vehicleServices } from \"../services/vehicleServices\";\nimport ReservationForm from './reservationForm';\n\n\nclass User extends React.Component {\n    state = {\n      searchText: '',\n      searchedColumn: '',\n      visible: false,\n      filterRentalLocation:'',\n      vehicleId:'',\n      reservationFormVisible: false\n    };\n\n    componentDidMount(){        \n        this.getVehiclesData();\n    }    \n        \n    getVehiclesData() {\n        vehicleServices.getVehiclesData().then(vehiclesData =>{ \n            this.setState({vehiclesData: vehiclesData})\n            console.log(vehiclesData);\n        });\n    }\n    \n    reserve(record, e){\n        e.preventDefault();\n        this.setState({\n          filterVehicleType : record.vehicleType,\n          filterRentalLocation: record.rentalLocationName,\n          vehicleId: record.vehicleId,\n          reservationFormVisible:true\n\n        });\n    }\n\n    showModal = () => {\n      this.setState({\n        visible: true,\n      });\n    };\n\n    handleOk = e => {\n      console.log(e);\n      const data = this.state.vehiclesData.filter(item => item.vehicleType === this.state.filterVehicleType);\n      this.setState({ vehiclesData: data });\n      this.setState({\n        visible: false,\n      });\n    };\n\n    handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false,\n      });\n    };\n    \n    \n    getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`Search ${dataIndex}`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90, marginRight: 8 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </div>\n      ),\n      filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n      onFilter: (value, record) =>\n        record[dataIndex]\n          .toString()\n          .toLowerCase()\n          .includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text =>\n        this.state.searchedColumn === dataIndex ? (\n          <Highlighter\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n            searchWords={[this.state.searchText]}\n            autoEscape\n            textToHighlight={text.toString()}\n          />\n        ) : (\n          text\n        ),\n    });\n\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex,\n      });\n    };\n\n    handleReset = clearFilters => {\n      clearFilters();\n      this.setState({ searchText: '' });\n    };\n\n    render() {\n      const fields = [\n        {\n          name: ['vehicleType'],\n          value: this.state.filterVehicleType,\n        },\n        {\n          name: ['rentalLocation'],\n          value: this.state.filterRentalLocation,\n        },\n      ];\n      const columns = [\n        {\n          title: 'Model',\n          dataIndex: 'model',\n          key: 'model',\n          width: '30%',\n          ...this.getColumnSearchProps('model'),\n        },\n        {\n          title: 'Make',\n          dataIndex: 'make',\n          key: 'make',\n          width: '20%',\n          ...this.getColumnSearchProps('make'),\n        },\n        {\n          title: 'Vehicle Type',\n          dataIndex: 'vehicleType',\n          key: 'vehicleType',\n          ...this.getColumnSearchProps('vehicleType'),\n        },\n        {\n          title: 'Rental Location Name',\n          dataIndex: 'rentalLocationName',\n          key: 'rentalLocationName',\n          ...this.getColumnSearchProps('rentalLocationName'),\n        },\n        {\n          title: 'Action',\n          dataIndex: '',\n          key: 'x',\n          render: (text, record) => (\n            <span style={{ zIndex: '-1' }}>\n              <Button type=\"primary\"  onClick={(e) => { this.reserve(record, e); }}\n\n              size=\"small\" style={{ width: 90 }}>\n                  Reserve\n              </Button>\n            </span>\n          ),\n        },\n\n      ];\n\n    const onCreate = values => {          \n        console.log(\"Received values of form: \", values);\n        var vehicle = this.state.vehicleId;\n        //var rentDate = moment(values.rentalDate).format('YYYY-MM-DD');\n        //var rentTime = moment(values.rentalDate).format('HH-mm');\n        var rentDateTime = moment(values.rentalDate).format('YYYY-MM-DD HH-mm');\n        var rentLength = parseInt(values.rentalLength);\n        // var rentEndTime = parseInt(moment(values.rentalDate).format('HH')) + parseInt(rentLength);\n        // rentEndTime = rentEndTime+'-'+ moment(values.rentalDate).format('mm');\n\n        var rentEndDateTime = moment(values.rentalDate).add(rentLength, 'hours').format('YYYY-MM-DD HH-mm');\n        \n        \n\n        vehicleServices.getVehicleTransactions(vehicle, rentDateTime).then(vehicleTransactionData =>{           \n          this.setState({vehicleTransactionData: vehicleTransactionData});\n          var data1 = this.state.vehicleTransactionData.filter(data => {\n            \n            //return data.vehicleId === vehicle && data.rentedTime < rentTime && data.rentEndTime > rentTime && data.isReserved === true;\n            return (moment(data.rentedDateTime).isSameOrBefore(rentDateTime) || moment(data.rentEndDateTime).isSameOrAfter(rentEndDateTime)) && data.isReserved === true;\n          });\n          console.log(data1);\n\n          if(data1.length > 0)\n          {\n            this.setState({reservationFormVisible:false});\n            this.showModal();\n          }\n          else{\n            vehicleServices.storeVehicleTransaction(vehicle, 1, true, false,rentDateTime ,rentLength, rentEndDateTime, rentDateTime) \n            .then(response => {\n              console.log(response);\n\n              this.setState({reservationFormVisible:false});        \n              Swal.fire('Success', 'Reservation successful!', 'success');\n          });\n          }\n\n        });\n        \n        \n    };\n    \n    \n    return (\n    <div>\n        <div>\n            <UserHeader selectedKey={['1']} />\n        </div>\n        <div style={{ textAlign: 'center'}}>\n            Vehicle and Vehicle Locations\n        </div>\n        \n        <Table pagination= { {pageSizeOptions: ['10', '20'], showSizeChanger: true}} columns={columns} dataSource={this.state.vehiclesData} />\n        \n        <Modal\n          title=\"Basic Modal\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <p>Sorry, the vehicle you are looking for is currently not available</p>\n          <p>Do you want to check for same vehicle type at other locations?</p>\n        </Modal>\n        \n        <ReservationForm\n            visible={this.state.reservationFormVisible}\n            onCancel={() => this.setState({reservationFormVisible:false})}\n            onCreate={onCreate}\n            fields={fields}\n        />\n        <div>\n            <Footer />\n        </div>\n\n    </div>\n    );\n  }\n}\n\nexport default User;","import React from 'react';\nimport 'antd/dist/antd.css';\n//import './index.css';\nimport { Table, Input, Button } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { vehicleServices } from \"../services/vehicleServices\";\n\nclass App1 extends React.Component {\n  state = {\n    searchText: '',\n    searchedColumn: '',\n  };\n\n\n  componentDidMount(){        \n    this.getVehiclesData();\n}    \n    \ngetVehiclesData() {\n    vehicleServices.getVehiclesData().then(vehiclesData =>{ \n        this.setState({vehiclesData: vehiclesData})\n        console.log(vehiclesData);\n    });\n}\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon={<SearchOutlined />}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  render() {\n    const columns = [\n      {\n        title: 'Model',\n        dataIndex: 'model',\n        key: 'model',\n        width: '30%',\n        ...this.getColumnSearchProps('model'),\n      },\n      {\n        title: 'Make',\n        dataIndex: 'make',\n        key: 'make',\n        width: '20%',\n        ...this.getColumnSearchProps('make'),\n      },\n      {\n        title: 'Rental Location Name',\n        dataIndex: 'rentalLocationName',\n        key: 'rentalLocationName',\n        ...this.getColumnSearchProps('rentalLocationName'),\n      },\n    ];\n    return <Table columns={columns} dataSource={this.state.vehiclesData} />;\n  }\n}\n\n  export default App1;","//configuration\n var valuesExport = {\n    url:'http://localhost:3001/',\n    price:{\n        \"1\":300,\n        \"2\":500,\n        \"3\":750,\n    }\n}\n\nexport default valuesExport;\n","import React from 'react';\nimport \"antd/dist/antd.css\";\nimport { validate } from 'driver-license-validator';\nimport Cards from 'react-credit-cards';\nimport 'react-credit-cards/es/styles-compiled.css';\nimport moment from 'moment';\nimport Headers from './header';\nimport Footer from './footer';\nimport Swal from 'sweetalert2';\nimport valuesExport from '../config/config';\nimport axios from 'axios';\n\n\nimport {\n    Form,\n    Input,\n    Select,\n    Button,\n    DatePicker\n} from 'antd';\n\nconst { MonthPicker } = DatePicker;\n\nconst { Option } = Select;\n\nconst validNumbers = ['4646122071443224', '5372077185231328', '5372073116245321', '349380337213215', '349890774468866', '6011387583206383'\n    , '3556638723817887', '4020374654722013', '4065698700805687', '349758136031484', '349965856628270']\n\nconst formItemLayout = {\n    labelCol: {\n        xs: {\n            span: 24,\n        },\n        sm: {\n            span: 8,\n        },\n    },\n    wrapperCol: {\n        xs: {\n            span: 20,\n        },\n        sm: {\n            span: 10,\n        },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nclass RegistrationForm extends React.Component {\n    formRef = React.createRef();\n\n    constructor() {\n        super();\n        this.state = {\n            stateValue: '',\n            showSubmit: false,\n            cvc: '',\n            expiry: '',\n            focus: '',\n            name: '',\n            number: '',\n            showIt: true,\n            price:300,\n            months:6,\n        }\n    }\n\n    componentDidMount(){\n       \n    }\n\n    onStateChange = (value) => {\n        this.setState({\n            stateValue: value\n        })\n\n    }\n\n    onFinish = values => {\n        Swal.fire('Welcome', 'Payment successful!', 'success')\n        var insertUser={\n            userId:1,\n            name:values.username,\n            emailid:values.email,\n            password:values.password,\n            licenseState: values.licenseState,\n            licenseNum:values.licenseNum,\n            address:values.address,\n            CCNumber:values.creditCard,\n            ownerName:values.name,\n            cvv:values.cvv,\n            expiryMonth: moment(values.monthPicker).format('MMMM'),\n            expiryYear:moment(values.monthPicker).format('YYYY'),\n            memStartDate: moment().format('DD/MM/YYYY'),\n            memEndDate:moment().add(this.state.months, 'months').format('DD/MM/YYYY'),\n            pricePaid: this.state.price,\n            isMember:'1',\n\n        }\n\n        axios.post(valuesExport.url + 'user/add/', JSON.stringify(insertUser), {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n  \n            }\n          })\n          .then(res => {\n            if (res.status >= 400) {\n           //   console.log(res)\n            }\n            else {\n         \n              this.setState({\n                \n              })\n            }\n          })\n          .catch(err => {\n           console.log(err)\n          })\n\n\n   \n\n       \n\n    };\n\n\n    checkLicenseNum = (rule, value) => {\n        if (this.state.stateValue) {\n            let validateVal = validate(value, this.state.stateValue);\n            if (!validateVal) {\n                return Promise.reject('Invalid License Number according to state')\n            }\n            return Promise.resolve()\n           \n\n        }\n        else {\n\n            return Promise.reject('Please select state first');\n        }\n    }\n\n    submitPayment = () => {\n        Swal.fire('Welcome', 'Payment successful!', 'success')\n\n        this.setState({\n            showSubmit: true\n        })\n    }\n    handleInputFocus = (e) => {\n        this.setState({ focus: e.target.name });\n    }\n\n\n    handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        this.setState({ [name]: value })\n        }\n\n\n\n\n    handleInputChangeNumber = (e) => {\n        const { value } = e.target;\n        this.setState({ number: value });\n    }\n\n    checkCreditCard = (rule, value) => {\n        if(value){\n        let newValue = value.toString()\n        this.setState({\n            number: value\n        })\n        if (validNumbers.includes((newValue))) {\n\n            return Promise.resolve()\n\n        }\n    \n        return Promise.reject('Invalid Credit card Number')\n        }\n        return Promise.reject()\n\n    }\n\n    checkName = (rule, value) => {\n        this.setState({\n            name: value\n        })\n        return Promise.resolve()\n    }\n\n    checkValidity = (rule, value) => {\n        let month = moment(value).format('MM');\n        let year = moment(value).format('YY')\n        let valueO = month + year\n        this.setState({\n            expiry: valueO\n        })\n        return Promise.resolve()\n\n    }\n\n    checkCVV = (rule, value) => {\n        if (!/^[0-9]+$/.test(value)) {\n            return Promise.reject('Only numbers allowed')\n        }\n\n        else if (value.length !== 3) {\n            return Promise.reject('Invalid CVV')\n        }\n\n        else {\n\n        }\n        this.setState({\n            cvc: value\n        })\n        return Promise.resolve()\n\n\n    }\n\n\n    disabledDate = (current) => {\n        return current && current.valueOf() < Date.now();\n\n    }\n\n    onMembershipChange = (e) => {\n        if(e === 1 || e === '1'){\n           this.setState({\n               price:valuesExport.price[\"1\"],\n               months:6\n           })\n        }\n        else if(e === 2 || e === '2'){\n            this.setState({\n                price:valuesExport.price[\"2\"],\n                months:12\n            })\n        }\n        else{\n            this.setState({\n                price:valuesExport.price[\"3\"],\n                months:24\n            })\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                    <Headers selectedKey={['2']} />\n                </div>\n                <div>\n                    <Form\n                        {...formItemLayout}\n                        ref={this.formRef}\n                        name=\"register\"\n                        onFinish={this.onFinish}\n                        scrollToFirstError\n                        style={{ paddingTop: '2%' }}\n                       \n                    >\n                        <Form.Item\n                            name=\"username\"\n                            label=\"Username\"\n                            rules={[\n                                {\n\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your name!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"email\"\n                            label=\"E-mail\"\n                            rules={[\n                                {\n                                    type: 'email',\n                                    message: 'The input is not valid E-mail!',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your E-mail!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"password\"\n                            label=\"Password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                            hasFeedback\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"confirm\"\n                            label=\"Confirm Password\"\n                            dependencies={['password']}\n                            hasFeedback\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please confirm your password!',\n                                },\n                                ({ getFieldValue }) => ({\n                                    validator(rule, value) {\n                                        if (!value || getFieldValue('password') === value) {\n                                            return Promise.resolve();\n                                        }\n\n                                        return Promise.reject('The two passwords that you entered do not match!');\n                                    },\n                                }),\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"licenseState\"\n                            label=\"Driver license state\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message:'Please select state'\n                                },\n                            ]}\n                        >\n                            <Select\n\n                                onChange={this.onStateChange}\n                                allowClear\n                            >\n                                <Option value=\"AL\">Alabama</Option>\n                                <Option value=\"AK\">Alaska</Option>\n                                <Option value=\"AZ\">Arizona</Option>\n                                <Option value=\"CA\">California</Option>\n                                <Option value=\"CO\">Colorado</Option>\n                                <Option value=\"FL\">Florida</Option>\n                                <Option value=\"GA\">Georgia</Option>\n                                <Option value=\"HI\">Hawaii</Option>\n                                <Option value=\"IL\">Illinois</Option>\n                                <Option value=\"IN\">Indiana</Option>\n                                <Option value=\"NY\">New York</Option>\n                                <Option value=\"TX\">Texas</Option>\n                                <Option value=\"WA\">Washington</Option>\n                                <Option value=\"WI\">Wisconsin</Option>\n\n                            </Select>\n                        </Form.Item>\n\n\n                        <Form.Item\n                            name=\"licenseNum\"\n                            label=\"License Number\"\n                            rules={[\n                                {\n                                    validator: this.checkLicenseNum,\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your driver license number!',\n                                }\n                            ]}\n                        >\n                            <Input style={{ width: '100%' }} />\n\n                            {/* <Cascader options={residences} /> */}\n                        </Form.Item>\n                        <Form.Item\n                            name=\"address\"\n                            label=\"Address\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your address!',\n                                },\n                            ]}\n                        >\n                            <Input.TextArea />\n\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"credit card\"\n                        >\n                            <Cards\n                                cvc={this.state.cvc}\n                                expiry={this.state.expiry}\n                                focus={this.state.focus}\n                                name={this.state.name}\n                                number={this.state.number}\n                            />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"creditCard\"\n                            label=\"Credit Card Details\"\n                            rules={[\n                                {\n                                    validator: this.checkCreditCard,\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your credit card number!',\n                                },\n                            ]}\n                        >\n                            <Input\n                                type=\"tel\"\n                                name=\"number\"\n                                placeholder=\"Card Number\"\n\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"name\"\n                            label=\"Owner Name\"\n                            rules={[\n                                {\n                                    validator: this.checkName\n                                },\n\n                                {\n                                    required: true,\n                                    message: 'Please enter owner name!',\n                                },\n                            ]}\n                        >\n                            <Input\n                                type=\"text\"\n                                name=\"name\"\n                                placeholder=\"Name\"\n\n                            />\n                        </Form.Item>\n                        <Form.Item name=\"monthPicker\" label=\"Expiry\"\n                            rules={[\n                                {\n                                    validator: this.checkValidity\n                                },\n\n                                {\n                                    required: true,\n                                    message: 'Please select expiration date!',\n                                },]}>\n                            <MonthPicker placeholder=\"Valid through\" disabledDate={this.disabledDate}\n                             />\n                        </Form.Item>\n\n\n                        <Form.Item\n                            name=\"cvv\"\n                            label=\"CVV\"\n                            rules={[\n                                {\n                                    validator: this.checkCVV,\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input cvv value!',\n                                }\n                            ]}\n                        >\n                            <Input\n                                type=\"text\"\n                                name=\"cvc\"\n                                placeholder=\"CVV\"\n                                onChange={this.handleInputChange}\n                                onFocus={this.handleInputFocus}\n                            />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"membership\"\n                            label=\"Membership\"\n                            rules={[\n                                {\n                                    required: true,\n                                },\n                            ]}\n                        >\n                            <Select\n\n                                onChange={this.onMembershipChange}\n                                allowClear\n                            >\n                                <Option value=\"1\">6 Months</Option>\n                                <Option value=\"2\">1 Year</Option>\n                                <Option value=\"3\">2 Years</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"price\"\n                            label=\"Price($)\"\n                            \n                        >\n    <span>{this.state.price}</span>\n                        </Form.Item>\n\n                        <Form.Item\n                            {...tailFormItemLayout}\n                        >\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                Pay & Register\n        </Button>\n                        </Form.Item>\n\n                        {this.state.showIt && <Form.Item {...tailFormItemLayout}>\n                            <Button type=\"primary\" disabled={!this.state.showSubmit}>\n                                Register\n        </Button>\n                        </Form.Item>}\n\n                    </Form>\n                </div>\n                <div>\n                    <Footer />\n                </div>\n\n\n            </div>\n        );\n    }\n};\n\nexport default RegistrationForm;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport WelcomePage from './welcomePage';\nimport LoginForm from './login';\nimport User from './user';\nimport App1 from './test';\nimport RegistrationForm from './joinus';\n\n// Main Component\nclass Main extends React.Component {\n  render() {\n    return (\n      <div>\n        {/* Render Different Component based on Route */}\n        <Route exact path=\"/\" component={WelcomePage} />\n        <Route path=\"/welcome/\" component={WelcomePage} />\n        <Route path=\"/signin/\" component={LoginForm} />\n        <Route path=\"/user/\" component={User} />\n        <Route path=\"/joinus/\" component={RegistrationForm} />\n        <Route path=\"/app1/\" component={App1} />\n\n      </div>\n    );\n  }\n}\n\n// Export The Main Component\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n        \n          <Main />\n        </div>\n      </BrowserRouter>\n    );\n   }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}